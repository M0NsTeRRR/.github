{%- raw %}
build-binary:
  name: Build binary
  runs-on: ubuntu-latest
  permissions:
    contents: write
  outputs:
    amd64: ${{ steps.binary-checksum.outputs.amd64 }}
    arm64: ${{ steps.binary-checksum.outputs.arm64 }}
  strategy:
    matrix:
      platform:
        - linux/amd64
        - linux/arm64
  steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable
    - name: Extract metadata to build the binary
      id: extract-metadata
      run: |
        # Get repo name
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)

        # Get version
        VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')

        # Get os and arch
        OS=$(echo "${{ matrix.platform }}" | cut -d'/' -f1)
        ARCH=$(echo "${{ matrix.platform }}" | cut -d'/' -f2)

        # Set output
        echo "BINARY_NAME=${REPO_NAME}_${VERSION}_${OS}_${ARCH}" >> $GITHUB_OUTPUT
        echo "TAR_GZ_NAME=${REPO_NAME}_${VERSION}_${OS}_${ARCH}.tar.gz" >> $GITHUB_OUTPUT
    - name: Build binary
      run: CGO_ENABLED=0 go -o "${{ steps.extract-metadata.outputs.BINARY_NAME }}" -ldflags "-X main.version=${{ github.ref_name }}" build main.go
    - name: Create tar.gz of binary with license and readme
      run: tar -czf ${{ steps.extract-metadata.outputs.TAR_GZ_NAME }} ${{ steps.extract-metadata.outputs.BINARY_NAME }} LICENSE LICENSE.fr README.md
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: ${{ steps.extract-metadata.outputs.TAR_GZ_NAME }}
publish-binary:
  name: Publish artifact
  runs-on: ubuntu-latest
  permissions:
    contents: write
  needs: [build-binary]
  steps:
    - name: Downloads artifacts
      uses: actions/download-artifact@v4
      with:
        name: artifacts
        path: /build
    - name: Create checksum file
      run: |
        > sha256sums.txt
        shopt -s nullglob
        for archive in /build/*; do
          if [ -z "${archive:-}" ]; then
            break
          fi
          CHECKSUM=$(sha256sum ${archive})
          echo $CHECKSUM >> sha256sums.txt
        done
    - name: Upload checksum file to release
      run: gh release upload ${{ github.ref }} sha256sums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload binary to release
      run: gh release upload ${{ github.ref }} /build*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
{%- endraw %}