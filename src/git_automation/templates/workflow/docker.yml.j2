{%- raw %}
build-docker:
  name: Build docker
  runs-on: ${{ matrix.runner }}
  permissions:
    contents: read
    packages: write # needed for pushing docker image
  outputs:
    tags: ${{ steps.meta.outputs.tags }}
    digest: ${{ steps.build-and-push.outputs.digest }}
    repository_lc: ${{ steps.repository_lc.outputs.REPOSITORY_LC }}
  strategy:
    fail-fast: false
    matrix:
      include:
        - os: linux
          arch: amd64
          runner: ubuntu-latest
        - os: linux
          arch: arm64
          runner: ubuntu-24.04-arm
  steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get repository in lower case
      id: repository_lc
      run: |
        echo "REPOSITORY_LC=${REPOSITORY@L}" >> $GITHUB_OUTPUT
      env:
        REPOSITORY: ${{ github.repository }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        platforms: ${{ matrix.os }}/${{ matrix.arch }}
        tags: ghcr.io/${{ steps.repository_lc.outputs.REPOSITORY_LC }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,push-by-digest=true,name-canonical=true,push=true,oci-mediatypes=true

    - name: Export digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: digests-${{ matrix.os }}-${{ matrix.arch }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1

merge-docker:
  name: Merge docker
  runs-on: ubuntu-latest
  permissions:
    contents: read
    packages: write # needed for pushing docker image
  needs: [build-docker]
  steps:
    - name: Downloads digests
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        pattern: digests-*
        merge-multiple: true
        path: ${{ runner.temp }}/digests

    - name: Login to GitHub Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Create manifest list and push
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf 'ghcr.io/${{ needs.build-docker.outputs.REPOSITORY_LC }}@sha256:%s ' *)

sign-docker:
  name: Sign Docker
  runs-on: ubuntu-latest
  permissions:
    packages: write # needed for pushing docker signature
    id-token: write # needed for signing the images with GitHub OIDC Token
  needs: [merge-docker]
  env:
    TAGS: ${{ needs.build-docker.outputs.tags }}
    DIGEST: ${{ needs.build-docker.outputs.digest }}
  steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

    - name: Install Syft
      uses: anchore/sbom-action/download-syft@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # v0.20.4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Sign the images with GitHub OIDC Token
      run: |
        for tag in ${TAGS}; do
          echo "Sign image for ${tag}@${DIGEST}"
          cosign sign -y --recursive ${tag}@${DIGEST}
        done

    - name: Generate SBOM
      run: |
        for tag in ${TAGS}; do
          echo "Generate sbom for ${tag}@${DIGEST}"
          syft --output cyclonedx-json=${tag}@${DIGEST}.sbom ${tag}@${DIGEST}
        done

    - name: Attest images with SBOM
      run: |
        for tag in ${TAGS}; do
          echo "Attest image for ${tag}@${DIGEST}"
          cosign attest -y --recursive --type cyclonedx --predicate ${tag}@${DIGEST}.sbom ${tag}@${DIGEST}
        done
{%- endraw %}
